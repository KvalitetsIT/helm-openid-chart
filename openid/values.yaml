# Default values for kitcaddy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2
docReplicaCount: 2

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

netpol:
  enabled: true

openid:
  image:
    repository: quay.io/oauth2-proxy/oauth2-proxy
    tag: "v7.3.0"

  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 10m
      memory: 64Mi

  provider: keycloak-oidc
  upstream: "http://127.0.0.1:8080"
  reverseProxy: "true"
  # Configure the session storage type, between cookie and redis
  sessionStorage:
    # Can be one of the supported session storage cookie/redis
    type: cookie
    redis:
      # Secret name that holds the redis-password and redis-sentinel-password values
      existingSecret: ""
      password: ""
      # Can be one of sentinel/cluster/standalone
      clientType: "standalone"
      standalone:
        # If empty and sessionStorage type is redis, will automatically be generated.
        connectionUrl: ""
      sentinel:
        password: ""
        masterName: ""
        # connectionUrls: "redis://127.0.0.1:8000,redis://127.0.0.1:8000"
        connectionUrls: [ ]
deployment:
  enabled: true
  containerPort: 8080

  securityContext:
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    seccompProfile: RuntimeDefault
  resources: {}

sidecar:
  enabled: false
  containerPort: 7070
  securityContext:
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    seccompProfile: RuntimeDefault
  resources: {}

docDeployment:
  enabled: false
  containerPort: 8080
  securityContext:
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    seccompProfile: RuntimeDefault
  env: [ ]

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  automount: false

podAnnotations: { }

podSecurityContext: { }
# fsGroup: 2000

service:
  enabled: true
  type: ClusterIP
  port: 80
  targetPort: proxy-port
  annotations: { }

docService:
  enabled: false
  type: ClusterIP
  port: 80
  targetPort: container-port
  annotations: { }

ingress:
  enabled: true
  annotations: { }
    # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: [ ]
  tls: [ ]
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

docIngress:
  enabled: false

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

## @param operator.podAffinityPreset Pod affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
## Allowed values: soft, hard
##
podAffinityPreset: "soft"

## @param operator.podAntiAffinityPreset Pod anti-affinity preset.
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
## Allowed values: `soft` or `hard`
##
podAntiAffinityPreset: ""

## Node affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##
nodeAffinityPreset:
  ## @param operator.nodeAffinityPreset.type Node affinity preset type. Allowed values: `soft` or `hard`
  ##
  type: ""
  ## @param operator.nodeAffinityPreset.key Set nodeAffinity preset key
  ## E.g.
  ## key: "kubernetes.io/e2e-az-name"
  ##
  key: ""
  ## @param operator.nodeAffinityPreset.values Set nodeAffinity preset values
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: [ ]
